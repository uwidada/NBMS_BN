// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Client {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName   String
  lastName    String
  roleId      String
  nationId    String
  idPicture   String
  address     String
  phoneNumber String
  email       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  role                  Role                    @relation(fields: [roleId], references: [id])
  ClientNationIdPicture ClientNationIdPicture[]
  BicycleAssign         BicycleAssign[]
}

model ClientNationIdPicture {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  clientId  String
  idPicture String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  client Client @relation(fields: [clientId], references: [id])
}

model Role {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Client         Client[]
  RolePermission RolePermission[]
}

model Permission {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  RolePermission RolePermission[]
}

model RolePermission {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  roleId       String
  permissionId String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  role       Role       @relation(fields: [roleId], references: [id])
  permission Permission @relation(fields: [permissionId], references: [id])
}

model Bicycle {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String          @unique
  model         String
  brand         String
  availability  String          @default("Available") // Enum replaced with a string
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  BicycleAssign BicycleAssign[]
}

model Time {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  timeInterval  String
  amount        Int
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  BicycleAssign BicycleAssign[]
}

model BicycleAssign {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  bicycleId        String
  userId           String
  timeIntervalId   String
  additionalAmount Int
  startTime        DateTime @default(now())
  endTime          DateTime

  bicycle      Bicycle @relation(fields: [bicycleId], references: [id])
  user         Client  @relation(fields: [userId], references: [id])
  timeInterval Time    @relation(fields: [timeIntervalId], references: [id])
}
